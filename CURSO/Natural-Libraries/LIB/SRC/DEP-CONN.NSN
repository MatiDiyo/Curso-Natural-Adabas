* >Natural Source Header 000000
* :Mode S
* :CP
* <Natural Source Header
/** Subprograma de Consulta de <b>Departamentos</b>.
DEFINE DATA PARAMETER 
*
USING EMP-ALTA
*
LOCAL

  1 #COD-DEPT (A06)
  
  1 #COD-DEP-M (A006/00001:00005)
  1 #DESC-M (A030/00001:00005)
  1 #SEL-M (A001/00001:00005)

  1 #COD-DEP-V (A006/00001:00300)
  1 #DESC-V (A030/00001:000300)
  1 #SEL-V (A001/00001:000300)
  
  1 #I (N03)
  1 #J (N03)
*
  1 #DESDE (N03) INIT <1>
  1 #HASTA (N03) INIT <5>
  1 #HASTA-MAX (N03)

  1 VISTA-DEPT VIEW OF DEPARTAMENTOS
    2 COD-DEPT 
    2 DESC
    
END-DEFINE
*
/*-------------------- MAIN -----------------------------------------*/
*
SET KEY ALL
*  
PERFORM CARGAR-VECTORES-TABLA
PERFORM CARGAR-MAPA
*    
REPEAT
*
  INPUT USING MAP 'DEP-ALTM'
  DECIDE ON FIRST VALUE OF *PF-KEY
*
    VALUE 'ENTR'
      PERFORM VALIDAR-SELECCION
      IF #COD-RETORNO-P EQ 1
        ESCAPE ROUTINE
      END-IF
*
    VALUE 'PF3'
      ESCAPE ROUTINE
*        
    VALUE 'PF7'
      IF #DESDE EQ 1
        REINPUT 'PRIMER PANTALLA'
      ELSE
        #DESDE := #DESDE - 5
        #HASTA := #HASTA - 5
*       WRITE '=' #DESDE /
*             '=' #HASTA  
        PERFORM CARGAR-MAPA
        RESET #SEL-M(*)
      END-IF
*          
    VALUE 'PF8'
      IF #HASTA >= #HASTA-MAX
        REINPUT 'ULTIMA PANTALLA'
      ELSE
        #DESDE := #DESDE + 5
        #HASTA := #HASTA + 5
*       WRITE '=' #DESDE /
*             '=' #HASTA  
        PERFORM CARGAR-MAPA
        RESET #SEL-M(*)
*
      END-IF
    NONE VALUE
      RESET #SEL-M(*)
      REINPUT 'OPCIÓN INCORRECTA'
  END-DECIDE         
END-REPEAT
*    
/*-------------------- SUBRUTINAS -----------------------------------*/
*
*********************************************
* SUBRUTINA CARGAR-VECTORES-TABLA
*********************************************
*
DEFINE SUBROUTINE CARGAR-VECTORES-TABLA                
*
  READ VISTA-DEPT BY VISTA-DEPT.COD-DEPT = #COD-DEPT  
    ADD 1                              TO #I
    MOVE VISTA-DEPT.COD-DEPT           TO #COD-DEP-V(#I)
    MOVE VISTA-DEPT.DESC               TO #DESC-V(#I)
*
    IF #I EQ 300
      ESCAPE BOTTOM
    END-IF
*
  END-READ
  MOVE #I                              TO #HASTA-MAX
END-SUBROUTINE
*
*********************************************
* SUBRUTINA CARGAR-MAPA
*********************************************
*
DEFINE SUBROUTINE CARGAR-MAPA
  RESET #J
  FOR #I = #DESDE TO #HASTA
    ADD 1                              TO #J
    MOVE #COD-DEP-V(#I)                TO #COD-DEP-M(#J)
    MOVE #DESC-V(#I)                   TO #DESC-M(#J)
  END-FOR
END-SUBROUTINE
*
*********************************************
* SUBRUTINA VALIDAR-SELECCION
*********************************************
*
DEFINE SUBROUTINE VALIDAR-SELECCION
/* SI SE SELECCIONA MÁS DE UNA OPCIÓN, GENERA UN ERROR LÓGICO
  IF SELECTION NOT UNIQUE #SEL-M(*)                   
     REINPUT 'SELECCIONE UN SOLO CÓDIGO' MARK *#SEL-M(1)
  END-IF
*
  FOR #I = 1 TO 5
    IF #SEL-M(#I) EQ 'X'
      /* SI SELECCIONO X, PERO HAY VALORES EN BLANCO ENTONCES
      /* ENTONCES NO SE CARGAN LOS VALORES
      IF #COD-DEP-M(#I) NE ' '
        MOVE #COD-DEP-M(#I) TO #COD-DEPT-P
        MOVE #DESC-M(#I)    TO #DESC-P
        MOVE 1              TO #COD-RETORNO-P
        ESCAPE ROUTINE
      ELSE
        RESET #SEL-M(#I) /* SE RESETEA EL VALOR DE 'X'
      END-IF
    END-IF
  END-FOR
END-SUBROUTINE

END
